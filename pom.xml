<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>MavenAspectJ</groupId>
	<artifactId>MaJ</artifactId>
	<version>1.0.0</version>

	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
		<aspectj.version>1.8.3</aspectj.version>
		<java.version>1.8</java.version>
	</properties>

	<inceptionYear>2014</inceptionYear>

	<name>MaJ</name>
	<description>
        Using Maven with AspectJ
    </description>
	<url>http://github.com/kodcu/MaJ</url>

	<organization>
		<name>Kodcu.com</name>
	</organization>

	<developers>
		<developer>
			<id>ozlerhakan</id>
			<name>Hakan Ozler</name>
			<email>ozler.hakan@gmail.com</email>
			<url>http://hakanozler.com.tr</url>
			<roles>
				<role>developer</role>
			</roles>
		</developer>
	</developers>

	<issueManagement>
		<system>github.com</system>
		<url>https://github.com/kodcu/MaJ/issues</url>
	</issueManagement>

	<dependencies>
		<!-- AOP dependency -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.7</version>
				<configuration>
					<!-- In order to make use of Java 8 features in aspects we need to set 
						the following statements -->
					<complianceLevel>${java.version}</complianceLevel>
					<!-- Optional configurations for the aspect compiler -->
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<outxml>true</outxml>
					<verbose>true</verbose>
					<showWeaveInfo>true</showWeaveInfo>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<!-- In order to run ajc (i.e. compiler and bytecode weaver for the 
							AspectJ and Java languages) before javac (no need), we add a phase tag to 
							the execution tag -->
						<phase>process-sources</phase>	<!-- or any phase before compile -->
						<goals>
							<!-- Weave all the main classes (.java) and aspects (.aj) -->
							<goal>compile</goal>
							<!-- Weave all the test classes -->
							<!-- if you have test classes, just uncomment test-compile statement -->
							<!-- <goal>test-compile</goal> -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.3.2</version>
				<executions>
					<execution>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>com.kodcu.app.main.Startup</mainClass>
				</configuration>
			</plugin>

			<!-- to ensure correct JDK is attached on your mvn (needs 1.8) if so, 
				just ignore this plug-in -->
			<!-- normally we don't need this for mvn clean install exec:java -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>	<!-- version number is also important, must be 2.5.1! (default - this plug-in 
					can be deleted) -->
				<configuration>
					<!-- considering the java version which is 1.8 for mvn -->
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

